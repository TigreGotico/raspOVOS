#!/bin/bash

# Function: ls_sinks
# Description: This function extracts the IDs and descriptions of audio output sinks from the `wpctl status` command output.
# It identifies the sinks by their ID and prints the ID with the associated description.
# The default sink is labeled as "[default]" and the other sinks are printed with their ID and description.
#
# Output: This function outputs the ID and description of each sink in the following format:
#   <sink_id> - <description>
#
# Example Output:
#   34 - USB Audio Device Analog Stereo
#   49 - Built-in Audio Stereo
#   52 - Built-in Audio Stereo
#   53 - Built-in Audio Digital Stereo (HDMI)
ls_sinks() {
    # Run wpctl status and filter the "Sinks" section
    wpctl status | awk '
        # Start capturing lines after the "Sinks:" section header
        /├─ Sinks:/ {capture = 1; next}
        # Stop capturing at the next section or empty line
        /^ ├─|^ └─|^$/ {capture = 0}
        # If capturing, process lines to extract the ID
        capture {
            # Check if the line starts with "*"
            if ($2 == "*") {
                # Remove trailing dot from ID and print it with [default] label
                gsub(/\.$/, "", $3)
                print $3 " - " substr($0, index($0,$4))
            }

            # Match lines with sink IDs (e.g., "*   34. USB Audio Device Analog Stereo")
            if ($2 ~ /^[0-9]+\.$/) {
                # Remove trailing dot from ID and print it
                gsub(/\.$/, "", $2)
                print $2 " - " substr($0, index($0,$3))
            }
        }
    '
}

# Function: default_sink_id
# Description: This function extracts the ID of the default audio output sink from the `wpctl status` command output.
# It identifies the default sink by checking for the "*" symbol and then prints only the sink's ID.
#
# Output: This function outputs the ID of the default sink.
# Example Output:
#   34
default_sink_id() {
    # Run wpctl status and filter the "Sinks" section
    wpctl status | awk '
        # Start capturing lines after the "Sinks:" section header
        /├─ Sinks:/ {capture = 1; next}
        # Stop capturing at the next section or empty line
        /^ ├─|^ └─|^$/ {capture = 0}
        # If capturing, process lines to extract the ID
        capture {
            # Check if the line starts with "*"
            if ($2 == "*") {
                # Remove trailing dot from ID and print it
                gsub(/\.$/, "", $3)
                print $3
            }
        }
    '
}


get_sink_card() {
    wpctl inspect $1 | grep "api.alsa.pcm.card"| awk -F'"' '{print $2}'
}

get_sink_name() {
    wpctl inspect $1 | grep "alsa.name"| awk -F'"' '{print $2}'
}
get_sink_card_name() {
    wpctl inspect $1 | grep "api.alsa.card.name"| awk -F'"' '{print $2}'
}

echo "==========================="
echo "raspOVOS Audio Diagnostics"
echo "==========================="
echo ""
echo "Available outputs:"
ls_sinks

echo ""
echo "Default output:"
SINK_ID=$(default_sink_id)
SINK_NAME=$(get_sink_name $SINK_ID)
CARD_INDEX=$(get_sink_card $SINK_ID)
CARD_NAME=$(get_sink_card_name $SINK_ID)
echo "ID: $SINK_ID"
echo "NAME: $SINK_NAME"
echo "CARD NUMBER: $CARD_INDEX"
echo "CARD NAME: $CARD_NAME"