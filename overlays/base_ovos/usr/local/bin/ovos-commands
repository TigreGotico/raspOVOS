#!/usr/bin/env python
import importlib
import json
import os
import random

from langcodes import closest_supported_match
from ovos_config import Configuration
from ovos_plugin_manager.skills import find_skill_plugins
from ovos_utils.lang import standardize_lang_tag

lang = Configuration().get("lang", "en-us")
lang = standardize_lang_tag(lang)

print("##########################")
print("OpenVoiceOS - Skills help")
print("##########################")
print("Scanning skills...")
plugins = find_skill_plugins()
skills = list(plugins.keys())
print(f"Found {len(skills)} installed skills")
if not skills:
    exit(1)
print("Select a skill and usage examples will be parsed from it's metadata")
print("\nSkill ids:")
for idx, s in enumerate(skills):
    print(f"{idx}) - {s}")
s = input("Select skill_id:")
skill_id = skills[int(s)]
plug = plugins[skill_id]
p = importlib.import_module(plug.__module__)
base_dir = os.path.join(os.path.dirname(p.__file__), "locale")
if not os.path.isdir(base_dir):
    print("ERROR: skill has no locale")
    exit()

locale = closest_supported_match(lang, os.listdir(base_dir))
if locale is None or locale == "und":
    print(f"ERROR: {skill_id} does not support {lang}")
    exit()

for root, folders, files in os.walk(os.path.join(base_dir, locale)):
    if "skill.json" in files:
        with open(os.path.join(root, "skill.json")) as f:
            data = json.load(f)
            if not data.get("examples"):
                print(f"ERROR: {skill_id} does not provide usage examples")
                continue
            random.shuffle(data["examples"])
            print(f"Skill name: {data['name']}")
            print(f"Description: {data['description']}")
            print("Trigger this skill with:")
            for s in data["examples"][:10]:
                print(f"    - {s}")
    else:
        print(f"ERROR: {skill_id} does not provide metadata")

